CREATE DATABASE IF NOT EXISTS swift;
USE swift;

SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS Stocks;
DROP TABLE IF EXISTS TwoMovingAveragesStrategies;
DROP TABLE IF EXISTS ChaosStrategies;
DROP TABLE IF EXISTS Strategies;
DROP TABLE IF EXISTS Trades;
SET FOREIGN_KEY_CHECKS = 1;


CREATE TABLE Stocks (
    Ticker VARCHAR(10) NOT NULL,
    Price FLOAT NOT NULL,
    PRIMARY KEY (Ticker)
);

CREATE TABLE Strategies (
    Id INTEGER NOT NULL AUTO_INCREMENT,
    IsActive BOOLEAN DEFAULT FALSE,
    Entry INTEGER NOT NULL,
    Close INTEGER NOT NULL,
    Stock VARCHAR(10) NOT NULL,
    FOREIGN KEY (Stock) REFERENCES Stocks(Ticker),
    PRIMARY KEY (Id)
);

-- For testing purposes
CREATE TABLE ChaosStrategies (
    Id INTEGER NOT NULL,
    FOREIGN KEY (Id) REFERENCES Strategies (Id),
    PRIMARY KEY (Id)
);

-- LongTime & ShortTime are in MILLISECONDS
CREATE TABLE TwoMovingAveragesStrategies (
    Id INTEGER NOT NULL,
    LongTime INTEGER NOT NULL,
    ShortTime INTEGER NOT NULL,
    LastLongAvg FLOAT NOT NULL DEFAULT 0,
    LastShortAvg FLOAT NOT NULL DEFAULT 0,
    FOREIGN KEY (Id) REFERENCES Strategies (Id),
    PRIMARY KEY (Id)
);

CREATE TABLE Trades (
    Id INTEGER NOT NULL AUTO_INCREMENT,
    Buy BOOLEAN NOT NULL,
    StrategyId INTEGER NOT NULL,
    Price FLOAT NOT NULL,
    TradeSize INTEGER NOT NULL,
    Stock VARCHAR(10) NOT NULL,
    TimeTransacted DATETIME NOT NULL,
    TransactionState ENUM('FILLED', 'PARTIALLY_FILLED', 'REJECTED') NOT NULL,
    FOREIGN KEY (StrategyId) REFERENCES Strategies(Id),
    FOREIGN KEY (Stock) REFERENCES Stocks(Ticker),
    PRIMARY KEY (Id)
);
